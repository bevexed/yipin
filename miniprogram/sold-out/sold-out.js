"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var order_1 = require("../api/order");
var app = getApp();
Page({
    data: {
        motto: '点击 “编译” 以构建',
        userInfo: {},
        hasUserInfo: false,
        canIUse: wx.canIUse('button.open-type.getUserInfo'),
        bannerList: [],
        consult: '',
        orderList: [],
        current_scroll: 7,
        type: 7,
        page: 1,
        token: '',
        allPage: 0
    },
    bindViewTap: function () {
        wx.navigateTo({
            url: 'logs/logs'
        });
    },
    onLoad: function () {
        var _this = this;
        if (app.globalData.userInfo) {
            this.setData({
                userInfo: app.globalData.userInfo,
                hasUserInfo: true,
            });
        }
        else if (this.data.canIUse) {
            app.userInfoReadyCallback = function (res) {
                _this.setData({
                    userInfo: res,
                    hasUserInfo: true
                });
            };
        }
        else {
            wx.getUserInfo({
                success: function (res) {
                    app.globalData.userInfo = res.userInfo;
                    _this.setData({
                        userInfo: res.userInfo,
                        hasUserInfo: true
                    });
                }
            });
        }
        var that = this;
        wx.getStorage({
            key: 'token',
            success: function (res) {
                that.setData({
                    token: res.data
                }, function () {
                    that.getOrderList(that.data.token, that.data.type, that.data.page);
                });
            }
        });
    },
    getOrderList: function (token, type, page) {
        var _this = this;
        order_1.orderAll(token, type, page).then(function (res) {
            var arr = res.data.list;
            _this.setData({
                orderList: _this.data.orderList.concat(arr),
                allPage: res.data.all_page,
                page: res.data.page
            });
        });
    },
    handleChangeScroll: function (_a) {
        var detail = _a.detail;
        var key = detail.key;
        this.setData({
            current_scroll: key,
            type: key
        });
        this.data.orderList = [];
        this.data.page = 1;
        this.getOrderList(this.data.token, key, this.data.page);
    },
    onReachBottom: function () {
        if (this.data.page > this.data.allPage) {
            return false;
        }
        wx.showLoading({
            title: '玩命加载中',
        });
        this.data.page = this.data.page + 1;
        this.getOrderList(this.data.token, this.data.type, this.data.page);
        wx.hideLoading();
    },
    getUserInfo: function (e) {
        console.log(e);
        app.globalData.userInfo = e.detail.userInfo;
        this.setData({
            userInfo: e.detail.userInfo,
            hasUserInfo: true
        });
    },
    toWaitPost: function (e) {
        wx.navigateTo({
            url: '../wait-post/wait-post?id=' + e.currentTarget.dataset.id + '&status=' + e.currentTarget.dataset.status
        });
    },
    toFahuo: function (e) {
        wx.navigateTo({
            url: '../post/post?id=' + e.currentTarget.dataset.id
        });
    },
    toFirstTrial: function (e) {
        order_1.confirmOrder(this.data.token, e.currentTarget.dataset.id, '2').then(function (res) {
            if (res.code == 1) {
                wx.showToast({
                    title: res.message,
                    icon: 'none',
                    duration: 2000
                });
            }
        });
    },
    toToday: function () {
        wx.navigateTo({
            url: '../../today/today'
        });
    },
    toFriend: function () {
        wx.navigateTo({
            url: '../../friend/friend'
        });
    },
    toSaleAfter: function () {
        wx.navigateTo({
            url: '../../sale-after/sale-after'
        });
    },
});
//# sourceMappingURL=data:application/json;base64,