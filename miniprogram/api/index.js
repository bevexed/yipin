"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ajax_1 = require("./ajax");
exports.reqBanner = function () { return ajax_1.ajax('/api/banners', {}); };
exports.reqAfterQuery = function (imei) { return ajax_1.ajax('/api/after_query', { imei: imei }); };
exports.reqRegister = function (_a) {
    var openid = _a.openid, phone = _a.phone, password = _a.password, code = _a.code;
    return ajax_1.ajax('/api/register', { openid: openid, phone: phone, password: password, code: code });
};
exports.reqPartner = function (data) { return ajax_1.ajax('/api/partner', data); };
exports.reqAddressList = function () { return ajax_1.ajax('/api/address_list'); };
exports.reqPhoneModels = function () { return ajax_1.ajax('/api/phone_models'); };
exports.sendMsg = function (_a) {
    var mobile = _a.mobile, type = _a.type;
    return ajax_1.ajax('/api/send_message', { mobile: mobile, type: type });
};
exports.reqLogin = function (_a) {
    var type = _a.type, openid = _a.openid, phone = _a.phone, password = _a.password;
    return ajax_1.ajax('/api/login', { type: type, openid: openid, phone: phone, password: password });
};
exports.reqGetFreeFilm = function (data) { return ajax_1.ajax('/api/get_free_film', data); };
exports.reqService = function () { return ajax_1.ajax('/api/service'); };
exports.reqUpdateBasicInformation = function (data) { return ajax_1.ajax('/api/update_basic_information', data); };
exports.requpdate_gathering_information = function (data) { return ajax_1.ajax('/api/update_gathering_information', data); };
exports.reqUserInformation = function (token) { return ajax_1.ajax('/api/user_information', token); };
exports.reqOpenid = function (code) { return ajax_1.ajax('api/mini_program', { code: code }); };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEyQjtBQU9kLFFBQUEsU0FBUyxHQUFHLGNBQU0sT0FBQSxXQUFJLENBQUMsY0FBYyxFQUFFLEVBQUUsQ0FBQyxFQUF4QixDQUF3QixDQUFDO0FBRzNDLFFBQUEsYUFBYSxHQUFHLFVBQUMsSUFBWSxJQUFLLE9BQUEsV0FBSSxDQUFDLGtCQUFrQixFQUFFLEVBQUMsSUFBSSxNQUFBLEVBQUMsQ0FBQyxFQUFoQyxDQUFnQyxDQUFDO0FBR25FLFFBQUEsV0FBVyxHQUFHLFVBQUMsRUFBb0M7UUFBbkMsa0JBQU0sRUFBRSxnQkFBSyxFQUFFLHNCQUFRLEVBQUUsY0FBSTtJQUFXLE9BQUEsV0FBSSxDQUFDLGVBQWUsRUFBRSxFQUFDLE1BQU0sUUFBQSxFQUFFLEtBQUssT0FBQSxFQUFFLFFBQVEsVUFBQSxFQUFFLElBQUksTUFBQSxFQUFDLENBQUM7QUFBdEQsQ0FBc0QsQ0FBQTtBQWM5RyxRQUFBLFVBQVUsR0FBRyxVQUFDLElBQWEsSUFBSyxPQUFBLFdBQUksQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDLEVBQTFCLENBQTBCLENBQUM7QUFJM0QsUUFBQSxjQUFjLEdBQUcsY0FBTSxPQUFBLFdBQUksQ0FBQyxtQkFBbUIsQ0FBQyxFQUF6QixDQUF5QixDQUFDO0FBSWpELFFBQUEsY0FBYyxHQUFHLGNBQU0sT0FBQSxXQUFJLENBQUMsbUJBQW1CLENBQUMsRUFBekIsQ0FBeUIsQ0FBQztBQUdqRCxRQUFBLE9BQU8sR0FBRyxVQUFDLEVBQW1CO1FBQWxCLGtCQUFNLEVBQUUsY0FBSTtJQUFXLE9BQUEsV0FBSSxDQUFDLG1CQUFtQixFQUFFLEVBQUMsTUFBTSxRQUFBLEVBQUUsSUFBSSxNQUFBLEVBQUMsQ0FBQztBQUF6QyxDQUF5QyxDQUFDO0FBVTdFLFFBQUEsUUFBUSxHQUFHLFVBQUMsRUFBc0M7UUFBckMsY0FBSSxFQUFFLGtCQUFNLEVBQUUsZ0JBQUssRUFBRSxzQkFBUTtJQUFhLE9BQUEsV0FBSSxDQUFDLFlBQVksRUFBRSxFQUFDLElBQUksTUFBQSxFQUFFLE1BQU0sUUFBQSxFQUFFLEtBQUssT0FBQSxFQUFFLFFBQVEsVUFBQSxFQUFDLENBQUM7QUFBbkQsQ0FBbUQsQ0FBQztBQVczRyxRQUFBLGNBQWMsR0FBRyxVQUFDLElBQWMsSUFBSyxPQUFBLFdBQUksQ0FBQyxvQkFBb0IsRUFBRSxJQUFJLENBQUMsRUFBaEMsQ0FBZ0MsQ0FBQztBQUd0RSxRQUFBLFVBQVUsR0FBRyxjQUFNLE9BQUEsV0FBSSxDQUFDLGNBQWMsQ0FBQyxFQUFwQixDQUFvQixDQUFDO0FBV3hDLFFBQUEseUJBQXlCLEdBQUcsVUFBQyxJQUFxQixJQUFHLE9BQUEsV0FBSSxDQUFDLCtCQUErQixFQUFDLElBQUksQ0FBQyxFQUExQyxDQUEwQyxDQUFDO0FBYWhHLFFBQUEsK0JBQStCLEdBQUcsVUFBQyxJQUEwQixJQUFLLE9BQUEsV0FBSSxDQUFDLG1DQUFtQyxFQUFFLElBQUksQ0FBQyxFQUEvQyxDQUErQyxDQUFDO0FBR2xILFFBQUEsa0JBQWtCLEdBQUcsVUFBQyxLQUFhLElBQUssT0FBQSxXQUFJLENBQUMsdUJBQXVCLEVBQUUsS0FBSyxDQUFDLEVBQXBDLENBQW9DLENBQUM7QUFHN0UsUUFBQSxTQUFTLEdBQUcsVUFBQyxJQUFXLElBQUcsT0FBQSxXQUFJLENBQUMsa0JBQWtCLEVBQUMsRUFBQyxJQUFJLE1BQUEsRUFBQyxDQUFDLEVBQS9CLENBQStCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2FqYXh9IGZyb20gXCIuL2FqYXhcIlxuXG5cbi8vIOmmlumhtWJhbm5lcuWbvuaVsOaNruWSjOWSqOivouaVsOaNrlxuLy8g6aaW6aG1YmFubmVy5Zu+5pWw5o2u5ZKM5ZKo6K+i5pWw5o2uXG4vLyDpppbpobViYW5uZXLlm77mlbDmja7lkozlkqjor6LmlbDmja5cblxuZXhwb3J0IGNvbnN0IHJlcUJhbm5lciA9ICgpID0+IGFqYXgoJy9hcGkvYmFubmVycycsIHt9KTtcblxuLy8g5ZSu5ZCO5p+l6K+iXG5leHBvcnQgY29uc3QgcmVxQWZ0ZXJRdWVyeSA9IChpbWVpOiBzdHJpbmcpID0+IGFqYXgoJy9hcGkvYWZ0ZXJfcXVlcnknLCB7aW1laX0pO1xuXG4vLyDnlKjmiLfms6jlhoxBUElcbmV4cG9ydCBjb25zdCByZXFSZWdpc3RlciA9ICh7b3BlbmlkLCBwaG9uZSwgcGFzc3dvcmQsIGNvZGV9OiBhbnkpID0+IGFqYXgoJy9hcGkvcmVnaXN0ZXInLCB7b3BlbmlkLCBwaG9uZSwgcGFzc3dvcmQsIGNvZGV9KVxuXG4vLyDmiJDkuLrlkIjkvZzllYZcbmV4cG9ydCBpbnRlcmZhY2UgUGFydG5ldCB7XG5cdHRva2VuOiBzdHJpbmc7XG5cdHBob25lOiBudW1iZXIgfCBzdHJpbmc7XG5cdG5hbWU6IHN0cmluZztcblx0YWRkcmVzczogc3RyaW5nO1xuXHRpZGVudGl0eT86IHN0cmluZztcblx0aWRfY2FyZD86IG51bWJlciB8IHN0cmluZztcblx0aWRfY2FyZF9wb3NpdGl2ZT86IGFueTtcblx0aWRfY2FyZF9jb250cmFyeT86IGFueTtcbn1cblxuZXhwb3J0IGNvbnN0IHJlcVBhcnRuZXIgPSAoZGF0YTogUGFydG5ldCkgPT4gYWpheCgnL2FwaS9wYXJ0bmVyJywgZGF0YSk7XG5cblxuLy8g55yB5biC5YiX6KGoXG5leHBvcnQgY29uc3QgcmVxQWRkcmVzc0xpc3QgPSAoKSA9PiBhamF4KCcvYXBpL2FkZHJlc3NfbGlzdCcpO1xuXG5cbi8vIOaJi+acuuWei+WPt1xuZXhwb3J0IGNvbnN0IHJlcVBob25lTW9kZWxzID0gKCkgPT4gYWpheCgnL2FwaS9waG9uZV9tb2RlbHMnKTtcblxuLy8g5Y+R6YCBIOS/oeaBr1xuZXhwb3J0IGNvbnN0IHNlbmRNc2cgPSAoe21vYmlsZSwgdHlwZX06IGFueSkgPT4gYWpheCgnL2FwaS9zZW5kX21lc3NhZ2UnLCB7bW9iaWxlLCB0eXBlfSk7XG5cbi8vIOeUqOaIt+eZu+W9lVxuaW50ZXJmYWNlIExvZ2luIHtcblx0dHlwZTogbnVtYmVyO1xuXHRvcGVuaWQ/OiBzdHJpbmc7XG5cdHBob25lPzogc3RyaW5nO1xuXHRwYXNzd29yZD86IHN0cmluZztcbn1cblxuZXhwb3J0IGNvbnN0IHJlcUxvZ2luID0gKHt0eXBlLCBvcGVuaWQsIHBob25lLCBwYXNzd29yZH06IExvZ2luKSA9PiBhamF4KCcvYXBpL2xvZ2luJywge3R5cGUsIG9wZW5pZCwgcGhvbmUsIHBhc3N3b3JkfSk7XG5cbi8vIOaJi+acuui0tOiGnFxuaW50ZXJmYWNlIEZyZWVGaWxlIHtcblx0dG9rZW46IHN0cmluZztcblx0cGhvbmVfbW9kZWw6IHN0cmluZyB8IG51bGw7XG5cdHNlcmlhbF9udW1iZXI6IHN0cmluZztcblx0cGhvbmU6IG51bWJlciB8IHN0cmluZyB8IHVuZGVmaW5lZDtcblx0Y29kZTogc3RyaW5nIHwgbnVtYmVyO1xufVxuXG5leHBvcnQgY29uc3QgcmVxR2V0RnJlZUZpbG0gPSAoZGF0YTogRnJlZUZpbGUpID0+IGFqYXgoJy9hcGkvZ2V0X2ZyZWVfZmlsbScsIGRhdGEpO1xuXG4vLyDlrqLmnI3ngrnor51cbmV4cG9ydCBjb25zdCByZXFTZXJ2aWNlID0gKCkgPT4gYWpheCgnL2FwaS9zZXJ2aWNlJyk7XG5cbi8vIOS/ruaUueeUqOaIt+WfuuacrOS/oeaBr1xuaW50ZXJmYWNlIEJhc2ljSW5mb3JtYXRpb24ge1xuXHR0b2tlbjogc3RyaW5nO1xuXHRuYW1lPzogc3RyaW5nO1xuXHRpZF9jYXJkPzogbnVtYmVyIHwgc3RyaW5nO1xuXHRpZF9jYXJkX3Bvc2l0aXZlPzogYW55O1xuXHRpZF9jYXJkX2NvbnRyYXJ5PzogYW55O1xufVxuXG5leHBvcnQgY29uc3QgcmVxVXBkYXRlQmFzaWNJbmZvcm1hdGlvbiA9IChkYXRhOkJhc2ljSW5mb3JtYXRpb24pPT5hamF4KCcvYXBpL3VwZGF0ZV9iYXNpY19pbmZvcm1hdGlvbicsZGF0YSk7XG5cbi8vIOS/ruaUueeUqOaIt+aUtuasvuS/oeaBr1xuaW50ZXJmYWNlIEdhdGhlcmluZ0luZm9ybWF0aW9uIHtcblx0dG9rZW46IHN0cmluZztcblx0YWxpcGF5X2FjY291bnQ/OiBzdHJpbmc7XG5cdGFsaXBheV9uYW1lPzogc3RyaW5nO1xuXHRiYW5rX25hbWU/OiBzdHJpbmc7XG5cdGJhbmtfbnVtYmVyPzogc3RyaW5nO1xuXHRiYW5rX3R5cGU/OiBzdHJpbmc7XG5cdG9wZW5pbmdfYmFuaz86IHN0cmluZztcbn1cblxuZXhwb3J0IGNvbnN0IHJlcXVwZGF0ZV9nYXRoZXJpbmdfaW5mb3JtYXRpb24gPSAoZGF0YTogR2F0aGVyaW5nSW5mb3JtYXRpb24pID0+IGFqYXgoJy9hcGkvdXBkYXRlX2dhdGhlcmluZ19pbmZvcm1hdGlvbicsIGRhdGEpO1xuXG4vLyDojrflj5bnlKjmiLfkv6Hmga9cbmV4cG9ydCBjb25zdCByZXFVc2VySW5mb3JtYXRpb24gPSAodG9rZW46IG9iamVjdCkgPT4gYWpheCgnL2FwaS91c2VyX2luZm9ybWF0aW9uJywgdG9rZW4pO1xuXG4vLyBvcGVuaWRcbmV4cG9ydCBjb25zdCByZXFPcGVuaWQgPSAoY29kZTpzdHJpbmcpPT5hamF4KCdhcGkvbWluaV9wcm9ncmFtJyx7Y29kZX0pO1xuIl19