"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ajax_1 = require("./ajax");
exports.reqBanner = function () { return ajax_1.ajax('/api/banners', {}); };
exports.reqAfterQuery = function (imei) { return ajax_1.ajax('/api/after_query', { imei: imei }); };
exports.reqRegister = function (_a) {
    var openid = _a.openid, phone = _a.phone, password = _a.password, code = _a.code;
    return ajax_1.ajax('/api/register', { openid: openid, phone: phone, password: password, code: code });
};
exports.reqPartner = function (_a) {
    var token = _a.token, phone = _a.phone, name = _a.name, address = _a.address, identity = _a.identity, id_card = _a.id_card, id_card_contrary = _a.id_card_contrary, id_card_positive = _a.id_card_positive;
    return ajax_1.ajax('/api/partner', { token: token, phone: phone, name: name, address: address, identity: identity, id_card: id_card, id_card_contrary: id_card_contrary, id_card_positive: id_card_positive });
};
exports.reqAddressList = function () { return ajax_1.ajax('/api/address_list'); };
exports.sendMsg = function (_a) {
    var mobile = _a.mobile, type = _a.type;
    return ajax_1.ajax('/api/send_message', { mobile: mobile, type: type });
};
exports.reqLogin = function (_a) {
    var type = _a.type, openid = _a.openid, phone = _a.phone, password = _a.password;
    return ajax_1.ajax('/api/login', { type: type, openid: openid, phone: phone, password: password });
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEyQjtBQU9kLFFBQUEsU0FBUyxHQUFHLGNBQU0sT0FBQSxXQUFJLENBQUMsY0FBYyxFQUFFLEVBQUUsQ0FBQyxFQUF4QixDQUF3QixDQUFDO0FBRzNDLFFBQUEsYUFBYSxHQUFHLFVBQUMsSUFBWSxJQUFLLE9BQUEsV0FBSSxDQUFDLGtCQUFrQixFQUFFLEVBQUMsSUFBSSxNQUFBLEVBQUMsQ0FBQyxFQUFoQyxDQUFnQyxDQUFDO0FBR25FLFFBQUEsV0FBVyxHQUFHLFVBQUMsRUFBb0M7UUFBbkMsa0JBQU0sRUFBRSxnQkFBSyxFQUFFLHNCQUFRLEVBQUUsY0FBSTtJQUFXLE9BQUEsV0FBSSxDQUFDLGVBQWUsRUFBRSxFQUFDLE1BQU0sUUFBQSxFQUFFLEtBQUssT0FBQSxFQUFFLFFBQVEsVUFBQSxFQUFFLElBQUksTUFBQSxFQUFDLENBQUM7QUFBdEQsQ0FBc0QsQ0FBQTtBQWM5RyxRQUFBLFVBQVUsR0FBRyxVQUFDLEVBQTZGO1FBQTVGLGdCQUFLLEVBQUUsZ0JBQUssRUFBRSxjQUFJLEVBQUUsb0JBQU8sRUFBRSxzQkFBUSxFQUFFLG9CQUFPLEVBQUUsc0NBQWdCLEVBQUUsc0NBQWdCO0lBQWUsT0FBQSxXQUFJLENBQUMsY0FBYyxFQUFFLEVBQUMsS0FBSyxPQUFBLEVBQUUsS0FBSyxPQUFBLEVBQUUsSUFBSSxNQUFBLEVBQUUsT0FBTyxTQUFBLEVBQUUsUUFBUSxVQUFBLEVBQUUsT0FBTyxTQUFBLEVBQUUsZ0JBQWdCLGtCQUFBLEVBQUUsZ0JBQWdCLGtCQUFBLEVBQUMsQ0FBQztBQUExRyxDQUEwRyxDQUFDO0FBSTNOLFFBQUEsY0FBYyxHQUFHLGNBQU0sT0FBQSxXQUFJLENBQUMsbUJBQW1CLENBQUMsRUFBekIsQ0FBeUIsQ0FBQTtBQUloRCxRQUFBLE9BQU8sR0FBRyxVQUFDLEVBQW1CO1FBQWxCLGtCQUFNLEVBQUUsY0FBSTtJQUFXLE9BQUEsV0FBSSxDQUFDLG1CQUFtQixFQUFFLEVBQUMsTUFBTSxRQUFBLEVBQUUsSUFBSSxNQUFBLEVBQUMsQ0FBQztBQUF6QyxDQUF5QyxDQUFDO0FBVTdFLFFBQUEsUUFBUSxHQUFHLFVBQUMsRUFBc0M7UUFBckMsY0FBSSxFQUFFLGtCQUFNLEVBQUUsZ0JBQUssRUFBRSxzQkFBUTtJQUFhLE9BQUEsV0FBSSxDQUFDLFlBQVksRUFBRSxFQUFDLElBQUksTUFBQSxFQUFFLE1BQU0sUUFBQSxFQUFFLEtBQUssT0FBQSxFQUFFLFFBQVEsVUFBQSxFQUFDLENBQUM7QUFBbkQsQ0FBbUQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7YWpheH0gZnJvbSBcIi4vYWpheFwiXHJcblxyXG5cclxuLy8g6aaW6aG1YmFubmVy5Zu+5pWw5o2u5ZKM5ZKo6K+i5pWw5o2uXHJcbi8vIOmmlumhtWJhbm5lcuWbvuaVsOaNruWSjOWSqOivouaVsOaNrlxyXG4vLyDpppbpobViYW5uZXLlm77mlbDmja7lkozlkqjor6LmlbDmja5cclxuXHJcbmV4cG9ydCBjb25zdCByZXFCYW5uZXIgPSAoKSA9PiBhamF4KCcvYXBpL2Jhbm5lcnMnLCB7fSk7XHJcblxyXG4vLyDllK7lkI7mn6Xor6JcclxuZXhwb3J0IGNvbnN0IHJlcUFmdGVyUXVlcnkgPSAoaW1laTogc3RyaW5nKSA9PiBhamF4KCcvYXBpL2FmdGVyX3F1ZXJ5Jywge2ltZWl9KTtcclxuXHJcbi8vIOeUqOaIt+azqOWGjEFQSVxyXG5leHBvcnQgY29uc3QgcmVxUmVnaXN0ZXIgPSAoe29wZW5pZCwgcGhvbmUsIHBhc3N3b3JkLCBjb2RlfTogYW55KSA9PiBhamF4KCcvYXBpL3JlZ2lzdGVyJywge29wZW5pZCwgcGhvbmUsIHBhc3N3b3JkLCBjb2RlfSlcclxuXHJcbi8vIOaIkOS4uuWQiOS9nOWVhlxyXG5pbnRlcmZhY2UgUGFydG5ldCB7XHJcblx0dG9rZW46IHN0cmluZyxcclxuXHRwaG9uZTogbnVtYmVyLFxyXG5cdG5hbWU6IHN0cmluZyxcclxuXHRhZGRyZXNzOiBzdHJpbmcsXHJcblx0aWRlbnRpdHk6IHN0cmluZyxcclxuXHRpZF9jYXJkPzogbnVtYmVyLFxyXG5cdGlkX2NhcmRfcG9zaXRpdmU/OiBhbnksXHJcblx0aWRfY2FyZF9jb250cmFyeT86IGFueSxcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IHJlcVBhcnRuZXIgPSAoe3Rva2VuLCBwaG9uZSwgbmFtZSwgYWRkcmVzcywgaWRlbnRpdHksIGlkX2NhcmQsIGlkX2NhcmRfY29udHJhcnksIGlkX2NhcmRfcG9zaXRpdmV9OiBQYXJ0bmV0KSA9PiBhamF4KCcvYXBpL3BhcnRuZXInLCB7dG9rZW4sIHBob25lLCBuYW1lLCBhZGRyZXNzLCBpZGVudGl0eSwgaWRfY2FyZCwgaWRfY2FyZF9jb250cmFyeSwgaWRfY2FyZF9wb3NpdGl2ZX0pO1xyXG5cclxuXHJcbi8vIOecgeW4guWIl+ihqFxyXG5leHBvcnQgY29uc3QgcmVxQWRkcmVzc0xpc3QgPSAoKSA9PiBhamF4KCcvYXBpL2FkZHJlc3NfbGlzdCcpXHJcblxyXG5cclxuLy8g5Y+R6YCBIOS/oeaBr1xyXG5leHBvcnQgY29uc3Qgc2VuZE1zZyA9ICh7bW9iaWxlLCB0eXBlfTogYW55KSA9PiBhamF4KCcvYXBpL3NlbmRfbWVzc2FnZScsIHttb2JpbGUsIHR5cGV9KTtcclxuXHJcbi8vIOeUqOaIt+eZu+W9lVxyXG5pbnRlcmZhY2UgTG9naW4ge1xyXG5cdHR5cGU6IG51bWJlcixcclxuXHRvcGVuaWQ/OiBzdHJpbmcsXHJcblx0cGhvbmU/OiBzdHJpbmcsXHJcblx0cGFzc3dvcmQ/OiBzdHJpbmcsXHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCByZXFMb2dpbiA9ICh7dHlwZSwgb3BlbmlkLCBwaG9uZSwgcGFzc3dvcmR9OiBMb2dpbikgPT4gYWpheCgnL2FwaS9sb2dpbicsIHt0eXBlLCBvcGVuaWQsIHBob25lLCBwYXNzd29yZH0pO1xyXG4iXX0=