"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ajax_1 = require("./ajax");
exports.reqBanner = function () { return ajax_1.ajax('/api/banners', {}); };
exports.reqAfterQuery = function (imei) { return ajax_1.ajax('/api/after_query', { imei: imei }); };
exports.reqRegister = function (_a) {
    var openid = _a.openid, phone = _a.phone, password = _a.password, code = _a.code;
    return ajax_1.ajax('/api/register', { openid: openid, phone: phone, password: password, code: code });
};
exports.reqPartner = function (data) { return ajax_1.ajax('/api/partner', data); };
exports.reqAddressList = function () { return ajax_1.ajax('/api/address_list'); };
exports.reqPhoneModels = function () { return ajax_1.ajax('/api/phone_models'); };
exports.sendMsg = function (_a) {
    var mobile = _a.mobile, type = _a.type;
    return ajax_1.ajax('/api/send_message', { mobile: mobile, type: type });
};
exports.reqLogin = function (_a) {
    var type = _a.type, openid = _a.openid, phone = _a.phone, password = _a.password;
    return ajax_1.ajax('/api/login', { type: type, openid: openid, phone: phone, password: password });
};
exports.reqGetFreeFilm = function (data) { return ajax_1.ajax('/api/get_free_film', data); };
exports.reqService = function () { return ajax_1.ajax('/api/service'); };
exports.reqUpdateBasicInformation = function (data) { return ajax_1.ajax('/api/update_basic_information', data); };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEyQjtBQU9kLFFBQUEsU0FBUyxHQUFHLGNBQU0sT0FBQSxXQUFJLENBQUMsY0FBYyxFQUFFLEVBQUUsQ0FBQyxFQUF4QixDQUF3QixDQUFDO0FBRzNDLFFBQUEsYUFBYSxHQUFHLFVBQUMsSUFBWSxJQUFLLE9BQUEsV0FBSSxDQUFDLGtCQUFrQixFQUFFLEVBQUMsSUFBSSxNQUFBLEVBQUMsQ0FBQyxFQUFoQyxDQUFnQyxDQUFDO0FBR25FLFFBQUEsV0FBVyxHQUFHLFVBQUMsRUFBb0M7UUFBbkMsa0JBQU0sRUFBRSxnQkFBSyxFQUFFLHNCQUFRLEVBQUUsY0FBSTtJQUFXLE9BQUEsV0FBSSxDQUFDLGVBQWUsRUFBRSxFQUFDLE1BQU0sUUFBQSxFQUFFLEtBQUssT0FBQSxFQUFFLFFBQVEsVUFBQSxFQUFFLElBQUksTUFBQSxFQUFDLENBQUM7QUFBdEQsQ0FBc0QsQ0FBQTtBQWM5RyxRQUFBLFVBQVUsR0FBRyxVQUFDLElBQWEsSUFBSyxPQUFBLFdBQUksQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDLEVBQTFCLENBQTBCLENBQUM7QUFJM0QsUUFBQSxjQUFjLEdBQUcsY0FBTSxPQUFBLFdBQUksQ0FBQyxtQkFBbUIsQ0FBQyxFQUF6QixDQUF5QixDQUFDO0FBSWpELFFBQUEsY0FBYyxHQUFHLGNBQU0sT0FBQSxXQUFJLENBQUMsbUJBQW1CLENBQUMsRUFBekIsQ0FBeUIsQ0FBQztBQUdqRCxRQUFBLE9BQU8sR0FBRyxVQUFDLEVBQW1CO1FBQWxCLGtCQUFNLEVBQUUsY0FBSTtJQUFXLE9BQUEsV0FBSSxDQUFDLG1CQUFtQixFQUFFLEVBQUMsTUFBTSxRQUFBLEVBQUUsSUFBSSxNQUFBLEVBQUMsQ0FBQztBQUF6QyxDQUF5QyxDQUFDO0FBVTdFLFFBQUEsUUFBUSxHQUFHLFVBQUMsRUFBc0M7UUFBckMsY0FBSSxFQUFFLGtCQUFNLEVBQUUsZ0JBQUssRUFBRSxzQkFBUTtJQUFhLE9BQUEsV0FBSSxDQUFDLFlBQVksRUFBRSxFQUFDLElBQUksTUFBQSxFQUFFLE1BQU0sUUFBQSxFQUFFLEtBQUssT0FBQSxFQUFFLFFBQVEsVUFBQSxFQUFDLENBQUM7QUFBbkQsQ0FBbUQsQ0FBQztBQVczRyxRQUFBLGNBQWMsR0FBRyxVQUFDLElBQWMsSUFBSyxPQUFBLFdBQUksQ0FBQyxvQkFBb0IsRUFBRSxJQUFJLENBQUMsRUFBaEMsQ0FBZ0MsQ0FBQztBQUd0RSxRQUFBLFVBQVUsR0FBRyxjQUFNLE9BQUEsV0FBSSxDQUFDLGNBQWMsQ0FBQyxFQUFwQixDQUFvQixDQUFBO0FBV3ZDLFFBQUEseUJBQXlCLEdBQUcsVUFBQyxJQUFxQixJQUFHLE9BQUEsV0FBSSxDQUFDLCtCQUErQixFQUFDLElBQUksQ0FBQyxFQUExQyxDQUEwQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHthamF4fSBmcm9tIFwiLi9hamF4XCJcblxuXG4vLyDpppbpobViYW5uZXLlm77mlbDmja7lkozlkqjor6LmlbDmja5cbi8vIOmmlumhtWJhbm5lcuWbvuaVsOaNruWSjOWSqOivouaVsOaNrlxuLy8g6aaW6aG1YmFubmVy5Zu+5pWw5o2u5ZKM5ZKo6K+i5pWw5o2uXG5cbmV4cG9ydCBjb25zdCByZXFCYW5uZXIgPSAoKSA9PiBhamF4KCcvYXBpL2Jhbm5lcnMnLCB7fSk7XG5cbi8vIOWUruWQjuafpeivolxuZXhwb3J0IGNvbnN0IHJlcUFmdGVyUXVlcnkgPSAoaW1laTogc3RyaW5nKSA9PiBhamF4KCcvYXBpL2FmdGVyX3F1ZXJ5Jywge2ltZWl9KTtcblxuLy8g55So5oi35rOo5YaMQVBJXG5leHBvcnQgY29uc3QgcmVxUmVnaXN0ZXIgPSAoe29wZW5pZCwgcGhvbmUsIHBhc3N3b3JkLCBjb2RlfTogYW55KSA9PiBhamF4KCcvYXBpL3JlZ2lzdGVyJywge29wZW5pZCwgcGhvbmUsIHBhc3N3b3JkLCBjb2RlfSlcblxuLy8g5oiQ5Li65ZCI5L2c5ZWGXG5leHBvcnQgaW50ZXJmYWNlIFBhcnRuZXQge1xuXHR0b2tlbjogc3RyaW5nLFxuXHRwaG9uZTogbnVtYmVyIHwgc3RyaW5nLFxuXHRuYW1lOiBzdHJpbmcsXG5cdGFkZHJlc3M6IHN0cmluZyxcblx0aWRlbnRpdHk/OiBzdHJpbmcsXG5cdGlkX2NhcmQ/OiBudW1iZXIgfCBzdHJpbmcsXG5cdGlkX2NhcmRfcG9zaXRpdmU/OiBhbnksXG5cdGlkX2NhcmRfY29udHJhcnk/OiBhbnksXG59XG5cbmV4cG9ydCBjb25zdCByZXFQYXJ0bmVyID0gKGRhdGE6IFBhcnRuZXQpID0+IGFqYXgoJy9hcGkvcGFydG5lcicsIGRhdGEpO1xuXG5cbi8vIOecgeW4guWIl+ihqFxuZXhwb3J0IGNvbnN0IHJlcUFkZHJlc3NMaXN0ID0gKCkgPT4gYWpheCgnL2FwaS9hZGRyZXNzX2xpc3QnKTtcblxuXG4vLyDmiYvmnLrlnovlj7dcbmV4cG9ydCBjb25zdCByZXFQaG9uZU1vZGVscyA9ICgpID0+IGFqYXgoJy9hcGkvcGhvbmVfbW9kZWxzJyk7XG5cbi8vIOWPkemAgSDkv6Hmga9cbmV4cG9ydCBjb25zdCBzZW5kTXNnID0gKHttb2JpbGUsIHR5cGV9OiBhbnkpID0+IGFqYXgoJy9hcGkvc2VuZF9tZXNzYWdlJywge21vYmlsZSwgdHlwZX0pO1xuXG4vLyDnlKjmiLfnmbvlvZVcbmludGVyZmFjZSBMb2dpbiB7XG5cdHR5cGU6IG51bWJlcixcblx0b3BlbmlkPzogc3RyaW5nLFxuXHRwaG9uZT86IHN0cmluZyxcblx0cGFzc3dvcmQ/OiBzdHJpbmcsXG59XG5cbmV4cG9ydCBjb25zdCByZXFMb2dpbiA9ICh7dHlwZSwgb3BlbmlkLCBwaG9uZSwgcGFzc3dvcmR9OiBMb2dpbikgPT4gYWpheCgnL2FwaS9sb2dpbicsIHt0eXBlLCBvcGVuaWQsIHBob25lLCBwYXNzd29yZH0pO1xuXG4vLyDmiYvmnLrotLTohpxcbmludGVyZmFjZSBGcmVlRmlsZSB7XG5cdHRva2VuOiBzdHJpbmcsXG5cdHBob25lX21vZGVsOiBzdHJpbmcgfCBudWxsLFxuXHRzZXJpYWxfbnVtYmVyOiBzdHJpbmcsXG5cdHBob25lOiBudW1iZXIgfCBzdHJpbmcgfCB1bmRlZmluZWQsXG5cdGNvZGU6IHN0cmluZyB8IG51bWJlclxufVxuXG5leHBvcnQgY29uc3QgcmVxR2V0RnJlZUZpbG0gPSAoZGF0YTogRnJlZUZpbGUpID0+IGFqYXgoJy9hcGkvZ2V0X2ZyZWVfZmlsbScsIGRhdGEpO1xuXG4vLyDlrqLmnI3ngrnor51cbmV4cG9ydCBjb25zdCByZXFTZXJ2aWNlID0gKCkgPT4gYWpheCgnL2FwaS9zZXJ2aWNlJylcblxuLy8g5L+u5pS555So5oi35Z+65pys5L+h5oGvXG5pbnRlcmZhY2UgQmFzaWNJbmZvcm1hdGlvbiB7XG5cdHRva2VuOiBzdHJpbmcsXG5cdG5hbWU/OiBzdHJpbmcsXG5cdGlkX2NhcmQ/OiBudW1iZXIgfCBzdHJpbmcsXG5cdGlkX2NhcmRfcG9zaXRpdmU/OiBhbnksXG5cdGlkX2NhcmRfY29udHJhcnk/OiBhbnksXG59XG5cbmV4cG9ydCBjb25zdCByZXFVcGRhdGVCYXNpY0luZm9ybWF0aW9uID0gKGRhdGE6QmFzaWNJbmZvcm1hdGlvbik9PmFqYXgoJy9hcGkvdXBkYXRlX2Jhc2ljX2luZm9ybWF0aW9uJyxkYXRhKTtcbiJdfQ==