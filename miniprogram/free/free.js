"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var index_1 = require("../api/index");
Page({
    data: {
        token: '',
        serial_number: '',
        phone: '',
        code: '',
        phone_model: '',
        list: [],
        array: [],
        list2: [],
        array2: [],
        multiArray: [[], []],
        multiIndex: [0, 0],
        index: 0,
        msgData: '获取验证码',
        time: 60,
        timer: 0,
        active: '',
        img: ''
    },
    onLoad: function () {
        var _this = this;
        wx.getStorage({
            key: 'token',
            success: function (res) {
                console.log(res);
                _this.setData({
                    token: res.data
                });
            }
        });
        this.getPhoneModels();
        this.getImg();
    },
    getImg: function () {
        var _this_1 = this;
        index_1.reqActivityShow(1).then(function (res) {
            if (res.code === 1) {
                _this_1.setData({
                    img: res.data
                });
            }
        });
    },
    bindMultiPickerChange: function (e) {
        console.log('picker发送选择改变，携带值为', e.detail.value);
        this.setData({
            multiIndex: e.detail.value
        });
        console.log(this.data.multiIndex);
    },
    bindMultiPickerColumnChange: function (e) {
        console.log('修改的列为', e.detail.column, '，值为', e.detail.value);
        if (e.detail.column === 0) {
            var _b = this.data, list = _b.list, array = _b.array;
            this.setData({
                multiArray: [array, list[e.detail.value]["subclass"].map(function (item) { return item.name; })]
            });
        }
    },
    input: function (e) {
        var _this_1 = this;
        var _b;
        console.log(e);
        var label = e.target.dataset.type;
        var value = e.detail.detail.value;
        console.log(value);
        this.setData((_b = {},
            _b[label] = value,
            _b), function () { return _this_1.doMerchantExist(); });
        console.log(label, value);
    },
    doMerchantExist: function () {
        if (this.data.serial_number.length < 5) {
            return;
        }
        index_1.reqMerchantExist(this.data.serial_number).then(function (res) {
            console.log(res);
            wx.showToast({
                icon: "none",
                title: res === 0 ? '商家编号不存在' : '商家存在'
            });
        });
    },
    getPhoneModels: function () {
        var _this_1 = this;
        index_1.reqPhoneModels().then(function (res) {
            if (res.code === 1) {
                console.log('get-phone-models', res);
                _this_1.setData({
                    list: res.data,
                    array: res.data.map(function (item) { return item.name; }),
                    list2: res.data[0].subclass,
                    array2: res.data[0].subclass.map(function (item) { return item.name; }),
                    multiArray: [res.data.map(function (item) { return item.name; }), res.data[0].subclass.map(function (item) { return item.name; })]
                });
            }
        });
    },
    changeCode: function (e) {
        console.log(e);
        this.setData({
            code: e.detail.value
        });
        console.log(this.data.code);
    },
    doSendMsg: function () {
        var _this = this;
        var _a = this.data, time = _a.time, timer = _a.timer;
        if (timer !== 0) {
            return;
        }
        var mobile = this.data.phone;
        var type = 'SMS_166320348';
        index_1.sendMsg({ type: type, mobile: mobile }).then(function (res) {
            if (res.code === 1) {
                timer = setInterval(function () {
                    if (time === 0) {
                        clearInterval(timer);
                        _this.setData({
                            timer: 0,
                            time: 60,
                            msgData: '获取验证码',
                            active: ''
                        });
                        return;
                    }
                    time--;
                    _this.setData({
                        msgData: time + 's',
                        timer: timer,
                        active: 'active'
                    });
                }, 1000);
            }
        });
    },
    getFreeFilm: function () {
        var _b = this.data, token = _b.token, serial_number = _b.serial_number, phone = _b.phone, code = _b.code, phone_model = _b.phone_model;
        console.log(phone_model);
        index_1.reqGetFreeFilm({ token: token, phone_model: phone_model, serial_number: serial_number, phone: phone, code: code }).then(function (res) {
            wx.showToast({
                title: res.message,
                icon: 'none',
                duration: 2000
            });
        });
    }
});
//# sourceMappingURL=data:application/json;base64,